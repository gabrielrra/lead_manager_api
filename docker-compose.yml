services:
  api:
    profiles: ['prod']
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - '8080:8080'
      - '8081:8081'
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ConnectionStrings__DefaultConnection=Server=db;Database=LeadManagerDb;User Id=sa;Password=Your_Strong_Password123;TrustServerCertificate=True
    depends_on:
      - db
    restart: unless-stopped

  api-dev:
    profiles: ['dev']
    build:
      context: .
      dockerfile: Dockerfile.dev
    ports:
      - '8080:8080'
      - '8081:8081'
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Server=db;Database=LeadManagerDb;User Id=sa;Password=Your_Strong_Password123;TrustServerCertificate=True
    volumes:
      - .:/app
      - /app/bin/
      - /app/obj/
    depends_on:
      - db

  db:
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=Your_Strong_Password123
      - MSSQL_PID=Express
    ports:
      - '1433:1433'
    volumes:
      - sqldata:/var/opt/mssql
    restart: unless-stopped

volumes:
  sqldata:
